<?php

require_once('testutility.php');
require_once('../../php/logger.php');
require_once('../../php/section.php');
require_once('../../php/course.php');
require_once('../../php/school.php');
require_once('../../php/tenant.php');


/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-07 at 17:15:10.
 */
class CourseTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Course
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Course;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }


    /**
     * @covers Course::add
     * @todo   Implement testAdd().
     */
    public function testAdd() {
       
        $tenanttoken = strtolower(TestUtility::getRamdomString(5));
        
        $t = new Tenant();
     
        $t->setDomain("$tenanttoken.test.com");
        $t->setEmailDomain("$tenanttoken.mail.test.com");
        $t->setPublished(false);
        $t->setName($tenanttoken."town");
        $result = $t->add();
        $this->assertEquals(1, $result->NodeId > 0);
        
        $s = new School();
        $s->setDescription('Desc');
        $s->setName('School1');
        $s->setOptionsString('OS');
        $s->setSchoolId('School1');
        $result1 = $s->add("$tenanttoken.test.com");
        $this->assertEquals(1, $result1->NodeId > 0);
        
        $c = new Course();
        $c->setCourseId('Course1');
        $c->setTitle("English");
        $result3 = $c->add("$tenanttoken.test.com", "School1");
        
        $this->assertEquals(1, $result3->NodeId > 0);
    
        return $tenanttoken;
    }
    
    
     /**
     * @covers Course::update
     * @todo   Implement testUpdate().
     * @depends testAdd
     */
    public function testUpdate($tenanttoken) {
        
        $c = new Course("$tenanttoken.test.com", 'School1', 'Course1');
        $c->setTitle('Maths');
        $result = $c->update();
        
        $this->assertEquals(1, $result->NodeId > 0);
        $this->assertEquals("Maths", $result->Title);
    }
    
    
    
    /**
     * @covers Course::loadCourse
     * @todo   Implement testLoadCourse().
     * @depends testAdd
     */
    public function testLoadCourse($tenanttoken) {
        
        $c = new Course();
        $c->loadCourse("$tenanttoken.test.com", 'School1', 'Course1');
        
        $this->assertEquals("Maths", $c->getTitle());
        
    }

   

}
